# networks command is used to intimate the docker for all the microservices create a network with the below
# name since these are going to get created in own networks to make this services to flow through one network for the
# intercommunication we use the command
# with this configuration accounts service does not wait for the config server to runnable state, so we have added
# readiness-state and liveness-state to check the config server running status since we have removed optional
# so all the microservices are relied on config server running status
services:
#  rabbit:
#    image: rabbitmq:3.13-management
#    hostname: rabbitmq
#    ports:
#      - "5672:5672"
#      - "15672:15672"
#    healthcheck:
#      test: rabbitmq-diagnostics check_port_connectivity
#      interval: 10s
#      timeout: 5s
#      retries: 10
#      start_period: 10s
#    extends:
#      file: common-config.yml
#      service: network-deploy-service

  configserver:
    image: "ballanibalaji/configserver:v2"
    container_name: configserver-ms
    ports:
      - "8071:8071"
    healthcheck:
      test: "curl --fail --silent localhost:8071/actuator/health/readiness |grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
#    depends_on:
#      rabbit:
#        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservice-base-config

  eurekaserver:
    image: "ballanibalaji/eurekaserver:v2"
    container_name: eurekaserver-ms
    ports:
      - "8070:8070"
    healthcheck:
      test: "curl --fail --silent localhost:8070/actuator/health/readiness |grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    extends:
      file: common-config.yml
      service: microservice-configserver-config
    depends_on:
      configserver:
        condition: service_healthy
    environment:
      SPRING_APPLICATION_NAME: "eurekaserver"

  accounts:
    image: "ballanibalaji/accounts:v2"
    container_name: accounts-ms
    ports:
      - "5050:5050"
    healthcheck:
      test: "curl --fail --silent localhost:5050/actuator/health/readiness |grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    # this property just says it is dependent on config server, but it does not wait for the server readiness
    # to overcome this we can re-frame the property as below
    # depends_on: configserver
    depends_on:
      configserver:
        condition: service_healthy
      mysqldb:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
    environment:
      SPRING_APPLICATION_NAME: "accounts"
      SPRING_DATASOURCE_URL: "jdbc:mysql://mysqldb:3306/accountsdb?createDatabaseIfNotExist=true"
      SPRING_JPA_DATABASE_PLATFORM: "org.hibernate.dialect.MySQLDialect"
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      MYSQL_ROOT_DATABASE: accountsdb

    extends:
      file: common-config.yml
      service: microservice-eureka-config

  loans:
    image: "ballanibalaji/loans:v2"
    container_name: loans-ms
    ports:
      - "5051:5051"
    healthcheck:
      test: "curl --fail --silent localhost:5051/actuator/health/readiness |grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    depends_on:
      configserver:
        condition: service_healthy
      mysqldb:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
    environment:
      SPRING_APPLICATION_NAME: "loans"
      SPRING_DATASOURCE_URL: "jdbc:mysql://mysqldb:3306/loansdb?createDatabaseIfNotExist=true"
      SPRING_JPA_DATABASE_PLATFORM: "org.hibernate.dialect.MySQLDialect"
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      MYSQL_ROOT_DATABASE: loansdb
    extends:
      file: common-config.yml
      service: microservice-eureka-config

#  loans_ms_1:
#    image: "ballanibalaji/loans:v2"
#    container_name: loans-ms-1
#    ports:
#      - "5060:5060"
#    depends_on:
#      configserver:
#        condition: service_healthy
#      mysqldb:
#        condition: service_healthy
#      eurekaserver:
#        condition: service_healthy
#    environment:
#      SPRING_APPLICATION_NAME: "loans"
#      SPRING_DATASOURCE_URL: "jdbc:mysql://mysqldb:3306/loansdb?createDatabaseIfNotExist=true"
#      SPRING_JPA_DATABASE_PLATFORM: "org.hibernate.dialect.MySQLDialect"
#      SPRING_JPA_HIBERNATE_DDL_AUTO: update
#      MYSQL_ROOT_DATABASE: loansdb
#    extends:
#      file: common-config.yml
#      service: microservice-eureka-config


  cards:
    image: "ballanibalaji/cards:v2"
    container_name: cards-ms
    ports:
      - "5052:5052"
    healthcheck:
      test: "curl --fail --silent localhost:5052/actuator/health/readiness |grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    depends_on:
      configserver:
        condition: service_healthy
      mysqldb:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservice-eureka-config
    environment:
      SPRING_APPLICATION_NAME: "cards"
      SPRING_DATASOURCE_URL: "jdbc:mysql://mysqldb:3306/cardsdb?createDatabaseIfNotExist=true"
      SPRING_JPA_DATABASE_PLATFORM: "org.hibernate.dialect.MySQLDialect"
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      MYSQL_ROOT_DATABASE: cardsdb



  mysqldb:
    container_name: infodb
    ports:
      - "3307:3306"
    extends:
      file: common-config.yml
      service: microservice-db-config
#  loansdb:
#    container_name: loansdb
#    ports:
#      - "3307:3306"
#    environment:
#      MYSQL_ROOT_DATABASE: loansdb
#    extends:
#      file: common-config.yml
#      service: microservice-db-config
#  cardsdb:
#    container_name: cardsdb
#    ports:
#      - "3307:3306"
#    environment:
#      MYSQL_ROOT_DATABASE: cardsdb
#    extends:
#      file: common-config.yml
#      service: microservice-db-config

  gatewayserver:
    image: "ballanibalaji/gatewayserver:v2"
    container_name: gatewayserver-ms
    ports:
      - "8072:8072"
    # this property just says it is dependent on config server, but it does not wait for the server readiness
    # to overcome this we can re-frame the property as below
    # depends_on: configserver
    depends_on:
      configserver:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
      cards:
        condition: service_healthy
      loans:
        condition: service_healthy
      accounts:
        condition: service_healthy
    environment:
      SPRING_APPLICATION_NAME: "gatewayserver"

    extends:
      file: common-config.yml
      service: microservice-eureka-config


networks:
  balaji:
    driver: "bridge"


